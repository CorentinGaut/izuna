(()=>{"use strict";class e{constructor(e,t){this.serverUrl=e,this.user=t.user,this.repo=t.repo,this.pr=t.pr}fetchPullRequestCommitsDetails(){const e=this.serverUrl+"/api/pullRequestInfo/"+this.user+"/"+this.repo+"/"+this.pr;return fetch(e).then((e=>{if(e.ok)return e.json();throw`Could not fetch pull request information for this PR! Response status: ${e.status} for url: ${e.url}`}))}fetchPullRequestCommitsDetails(){const e=this.serverUrl+"/api/pullRequestInfo/"+this.user+"/"+this.repo+"/"+this.pr;return fetch(e).then((e=>{if(e.ok)return e.json();throw`Could not fetch pull request information for this PR! Response status: ${e.status} for url: ${e.url}`}))}fetchFilesInfo(e,t){const s=this.fetchFileInfo(e.targetOid,t),o=this.fetchFileInfo(e.commitOids[0],t);return Promise.all([s,o]).then((e=>({oldPackageInfo:e[0],newPackageInfo:e[1]})))}async fetchFileInfo(e,t){const s=this.serverUrl+"/api/projectInfo/"+this.user+"/"+this.repo+"/"+e;return fetch(s,{method:"POST",credentials:"omit",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then((e=>{if(e.ok)return e.json();if(404===e.status)return{};throw`Could not fetch izuna project info! Response status: ${e.status} for url: ${e.url}`}))}}chrome.runtime.onInstalled.addListener((()=>{chrome.storage.sync.set({enableIzuna:!0})})),chrome.tabs.onUpdated.addListener(((t,s,o)=>{chrome.declarativeContent.onPageChanged.removeRules(void 0,(function(){chrome.declarativeContent.onPageChanged.addRules([{conditions:[new chrome.declarativeContent.PageStateMatcher({pageUrl:{hostEquals:"github.com"}})],actions:[new chrome.declarativeContent.ShowPageAction]}])})),chrome.storage.sync.get("enableIzuna",(function(t){if(t.enableIzuna){const t=function(e,t,s){const o=new URL(s.url);if(t&&t.status&&"complete"===t.status&&s.active&&"complete"===s.status&&"github.com"===o.hostname){const e=o.pathname.split("/")[3],t=o.pathname.split("/")[5];if("pull"===e&&"files"===t){const[e,t,s,n,r,...i]=o.pathname.split("/"),a={user:t,repo:s,pr:r};return Object.entries(a).forEach((([e,t])=>{if(!t)throw`Could not retrieve pull request info for key: ${e}`})),a}}return!1}(0,s,o);if(t){const s=new e("https://izuna.app",t);s.fetchPullRequestCommitsDetails(t).then((e=>{chrome.tabs.sendMessage(o.id,{cmd:"whichFiles"},(t=>{s.fetchFilesInfo(e,t).then((e=>{chrome.tabs.sendMessage(o.id,e,(e=>{}))}))}))}))}}}))}))})();